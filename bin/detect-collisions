#!/usr/bin/env php
<?php declare(strict_types=1);

use ShipMonk\NameCollision\CollisionDetector;
use ShipMonk\NameCollision\DetectionConfig;
use ShipMonk\NameCollision\Exception\FileParsingException;
use ShipMonk\NameCollision\Exception\InvalidConfigException;

$autoloadFiles = [
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/../../../autoload.php',
];

foreach ($autoloadFiles as $autoloadFile) {
    if (file_exists($autoloadFile)) {
        require_once $autoloadFile;
        break;
    }
}

/**
 * @return never
 */
$exit = function (string $message): void {
    echo "ERROR: $message" . PHP_EOL . PHP_EOL;
    exit(255);
};

$providedOptions = getopt('', ['help', 'configuration:'], $restIndex);

$cwd = getcwd();
$directories = array_slice($argv, $restIndex);

if (isset($providedOptions['help'])) {
    echo <<<EOD

Usage:
    vendor/bin/detect-collisions dir-to-scan

Options:
    --help                      Print this help text and exit.
    --configuration <path>      Provide custom json configuration file

EOD;
    exit;
}

if (isset($providedOptions['configuration'])) {
    $configFilePath = $cwd . "/" . $providedOptions['configuration'];
    if (!is_file($configFilePath)) {
        $exit("Invalid config path given, $configFilePath is not a file.");
    }
} else {
    $configFilePath = $cwd . "/collision-detector.json";
}

try {
    if (file_exists($configFilePath)) {
        echo "Using config '$configFilePath'" . PHP_EOL . PHP_EOL;
        $config = DetectionConfig::fromConfigFile($directories, $cwd, $configFilePath);
    } else {
        $config = DetectionConfig::fromDefaults($directories, $cwd);
    }

    if ($config->getScanPaths() === []) {
        $exit("No directories provided, use e.g. `detect-collisions src tests` or setup scanPaths in $configFilePath");
    }

    $detector = new CollisionDetector($config);

    $startTime = microtime(true);
    $result = $detector->getCollidingTypes();
    $elapsedTime = microtime(true) - $startTime;

    $collisions = $result->getCollisions();
} catch (FileParsingException | InvalidConfigException $e) {
    $exit($e->getMessage());
}

foreach ($collisions as $name => $fileLines) {
    $count = count($fileLines);
    echo "$name is defined $count times:" . PHP_EOL;
    foreach ($fileLines as $fileLine) {
        echo " > {$fileLine->getFilePath()}:{$fileLine->getLine()}" . PHP_EOL;
    }
    echo PHP_EOL;
}

if ($collisions === []) {
    echo "OK (no name collision found)". PHP_EOL;
    echo " * analysed files: " . $result->getFilesScanned() . PHP_EOL;
    echo " * excluded files: " . $result->getFilesExcluded() . PHP_EOL;
    echo " * elapsed time: " . round($elapsedTime, 3) . ' s' . PHP_EOL;
}

echo PHP_EOL;

exit(count($collisions) > 0 ? 1 : 0);
